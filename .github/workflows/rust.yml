name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test_matrix:
    strategy:
      matrix:
        include:
          - os: windows-latest
            artifact_name: ${{ github.event.repository.name }}-pktmon-only.exe
            suffix: ".exe"
            rust_features: ""
          - os: windows-latest
            artifact_name: ${{ github.event.repository.name }}-pcap-and-pktmon.exe
            suffix: ".exe"
            rust_features: "pcap"
          - os: ubuntu-22.04
            artifact_name: ${{ github.event.repository.name }}
            suffix: ""
            rust_features: "pcap,static-libpcap"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Disable man-db auto update (Linux) # will be fixed by 2025-11-14 https://github.com/actions/runner-images/issues/13213
        if: runner.os == 'Linux'
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure -f noninteractive man-db
      - name: Install libpcap build dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list && sudo apt-get update && sudo apt-get build-dep -y libpcap0.8
      - name: Cache libpcap tarball (Linux)
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: /tmp/libpcap-1.10.5.tar.gz
          key: libpcap-1.10.5-tarball
      - name: Build and install libpcap without dbus (Linux)
        if: runner.os == 'Linux'
        run: |
          cd /tmp
          # Download if not cached
          if [ ! -f libpcap-1.10.5.tar.gz ]; then
            wget https://www.tcpdump.org/release/libpcap-1.10.5.tar.gz
          fi
          # Verify SHA256 checksum
          echo "37ced90a19a302a7f32e458224a00c365c117905c2cd35ac544b6880a81488f0  libpcap-1.10.5.tar.gz" | sha256sum -c
          # Extract, build, and install
          tar xzf libpcap-1.10.5.tar.gz
          cd libpcap-1.10.5
          ./configure --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu --disable-dbus
          make
          sudo make install
          sudo ldconfig
      - name: Install Npcap SDK (Windows)
        if: runner.os == 'Windows'
        run: |
          curl https://npcap.com/dist/npcap-sdk-1.15.zip -o sdk.zip
          unzip sdk.zip
      - run: rustup component add clippy
      - run: cargo check --release
      - run: cargo fmt --check
      - run: cargo test --release --no-default-features --features "${{ matrix.rust_features }}"
        env:
            LIB: ${{ github.workspace }}/Lib/x64/
      - run: cargo clippy --release
      - run: cargo build --release --no-default-features --features "${{ matrix.rust_features }}"
        env:
            LIB: ${{ github.workspace }}/Lib/x64/
      - if: ${{matrix.artifact_name}}
        name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: target/release/irminsul${{ matrix.suffix }}
